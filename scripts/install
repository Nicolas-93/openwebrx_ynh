#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
admin=$YNH_APP_ARG_ADMIN
password=$YNH_APP_ARG_PASSWORD
dream_asked=$YNH_APP_ARG_INSTALL_DREAM
app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

datadir=/home/yunohost.app/$app

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=dream_installed --value=$dream_asked

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Finding an available port..." --weight=1

port=$(ynh_find_port --port=8095)
ynh_app_setting_set --app=$app --key=port --value=$port


#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=25

ynh_install_app_dependencies $pkg_dependencies
ynh_install_extra_app_dependencies --repo="deb $repo_url $(ynh_get_debian_release) main" \
                                   --key="$repo_key" \
                                   --package="$extra_pkg_dependencies"

# Compile and install DREAM if asked
if [ $dream_asked -eq 1 ]; then
    install_dream
fi

#==================================================
# CREATE DEDICATED USER AND ADD IT TO PLUGDEV GROUP
#==================================================
ynh_script_progression --message="Configuring system user..." --weight=1

# Create a system user
ynh_system_user_create --username=$app \
                       --home_dir="$final_path" \
                       --groups="plugdev"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=5

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
ynh_setup_source --dest_dir="$final_path"

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app: "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..." --weight=1

ynh_app_setting_set --app=$app --key=datadir --value=$datadir

mkdir -p "$datadir"

chmod 700 "$datadir"
chmod -R o-rwx "$datadir"
chown -R $app: "$datadir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

# Create configuration directories
mkdir -p /etc/$app/$app.conf.d

# Default config
mv $final_path/$app.conf /etc/$app

# Override configs
ynh_add_config --template="../conf/$app.conf" --destination="/etc/$app/$app.conf.d/ynh.conf"

cp $final_path/bands.json /etc/$app
ynh_store_file_checksum --file="/etc/$app/bands.json"

chmod -R 500 "/etc/$app"
chmod -R o-rwx "/etc/$app"
chown -R $app: "/etc/$app"

#=================================================
# SPECIFIC SETUP
#=================================================
# Create admin user for OpenWebRX
#=================================================
ynh_script_progression --message="Creating OpenWebRX's admin user" --weight=5

openwebrx=$final_path/openwebrx.py
if test -f "$datadir/users.json" ; then
    ynh_print_warn --message="User database already exists, checking if user $admin already exists..."    
    if python $openwebrx admin hasuser $admin ; then
        ynh_print_warn --message="User $admin already exists, replacing password..."
        python $openwebrx admin removeuser $admin
    else
        ynh_print_warn --message="User $admin isn't in database, adding it..."
    fi
fi

OWRX_PASSWORD=$password python $openwebrx admin --noninteractive adduser $admin
chmod 0600 "$datadir/users.json"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=1

ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --weight=1

mkdir -p "/var/log/$app"
ynh_use_logrotate --logfile="/var/log/$app/$app.log"

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description="SDR receiver" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=5

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..." --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	ynh_permission_update --permission="main" --add="visitors"
fi

# Only the admin can access the admin panel of the app (if the app has an admin panel)
ynh_permission_create --permission="admin" --url="/settings" --allowed=$admin

ynh_permission_create --permission="api" \
                      --url="/api" \
                      --additional_urls="/metrics /metrics.json /status.json" \
                      --allowed=$admin \
                      --auth_header=false \
                      --show_tile="false"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" \
                       --last

